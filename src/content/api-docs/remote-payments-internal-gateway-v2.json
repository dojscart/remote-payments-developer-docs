{
  "x-generator": "NSwag v13.12.1.0 (NJsonSchema v10.4.6.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Payment Service",
    "version": "2.0.0",
    "description": "# Introduction\n\nThe Dojo API is RESTful. It returns HTTP response codes to indicate errors. It also\naccepts and returns JSON in the HTTP body. \n\n# Authentication\n\n\n# HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The various HTTP status codes we might return are listed below.\n\n| Code  | Title | Description |\n|---------|----------------|----------------|\n|200| OK | The request was successful. |\n|400| Bad request | Bad request, probably due to a syntax error. |\n|401| Unauthorized | \tAuthentication required. |\n|402| Request Failed | Over plan quota on this endpoint. |\n|404| Not found | The resource does not exist. |\n|405| Method Not Allowed| The used request method is not supported by that resource, e.g. using a POST on a resource that requires a GET.\n|409| Conflict | The request could not be completed because it conflicted with another request or the server's configuration. |\n|50X| Internal Server Error | An error occurred with our API.|\n\n# Errors\n\nDojo follows the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807) also known as Problem Details for HTTP APIs. All errors are returned in the form of JSON.\n\n## Error Schema\n\nIn case of an error, the response object contains the following fields: \n\n| Field | Type| Required| Description |\n|---------|----------------|----------------|---------------|\n|errors| Object || Returns an explanation of errors.|\n|type| String || Returns the type of error that was encountered.|\n|title| String|| Returns a short summary of errors. |\n|status| Integer | | Returns the HTTP status code.|\n|traceId| String ||The unique identifier of the failing request.|\n\nThe following example shows a possible error response:\n\n``` json\n{\n    \"errors\": {\n        \"Reference\": [\n            \"The Reference field is required.\"\n        ]\n    },\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"00-a405f077df056a498323ffbcec05923f-aa63e6f4dbbc734a-01\"\n}\n```\n\n\n# Versioning\n\nDojo API uses the YYYY-MM-DD API version-naming scheme. You have to pass the version as the `version` header in all API calls.\n\nWhen we make [breaking changes](../development-resources/versioning-overview/#breaking-changes) to the API, we release new dated versions. \n\nThe current version is 2021-10-22. Check the last updates out in the [changelog](../development-resources/versioning-overview/#changelog).\n\n# Postman collection\n\nYou can run the API collection in Postman:\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/16735701-7fe64908-9da4-4c17-b78d-80a1f41b4295?action=collection%2Ffork&collection-url=entityId%3D16735701-7fe64908-9da4-4c17-b78d-80a1f41b4295%26entityType%3Dcollection%26workspaceId%3Dfdd152df-0154-428c-aeb4-1b90e46b8523)"
  },
  "servers": [
    {
      "url": "https://remote-payments-internal-gateway-dev.dojo.dev",
      "description": "Testing API"
    },
    {
      "url": "https://remote-payments.dojo.dev",
      "description": "Production API"
    }
  ],
  "tags": [
    {
      "name": "PaymentIntents",
      "description": "Allows you to take and manage payments.\n\n**Documentation**: [Payments](../payments)"
    },
    {
      "name": "Refunds",
      "description": "Allows you to manage a refund for payments.\n\n**Documentation**: [Refunds](../payments)"
    },
    {
      "name": "Reversal",
      "description": "\n\n**Documentation**: [Reversal](../payments)"
    },
    {
      "name": "Captures",
      "description": "\n\n**Documentation**: [Captures](../payments)"
    }
  ],
  "x-tagGroup": [
    {
      "name": "Payments",
      "tags": [
        "PaymentIntents",
        "Refunds",
        "Reversal",
        "Captures"
      ]
    },
    {
      "name": "Notifications",
      "tags": ""
    }
  ],
  "paths": {
    "/api/payment-intents": {
      "post": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Create a payment intent",
        "description": "A Payment Intent is the process of collecting a payment from a customer.",
        "operationId": "PaymentIntents_CreatePaymentIntent",
        "requestBody": {
          "x-name": "createPaymentIntentRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentIntentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Returns the PaymentIntent object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponce"
                }
              }
            }
          },
          "400": {
            "description": "If bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If internal server error"
          }
        },
        "security": []
      }
    },
    "/api/payment-intents/{paymentIntentId}": {
      "get": {
        "tags": [
          "PaymentIntents"
        ],
        "operationId": "PaymentIntents_Get",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the payment intent.",
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the PaymentIntentResponce object. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponce"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [],
        "description": "Retrieves the details of a payment intent. Supply the unique payment ID from either a payment intent creation request.",
        "summary": "Retrieve a payment intent"
      }
    },
    "/api/payment-intents/{paymentIntentId}/captures": {
      "post": {
        "tags": [
          "Captures"
        ],
        "summary": "Captures a payment",
        "description": "The method allows you to capture a payment intent that has previously been created but not yet refunded or reversed. You can capture the full amount or a partial amount.",
        "operationId": "Captures_Create",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the payment intent.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCaptureRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the CreateCaptureResponse object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCaptureResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If internal server error",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/payment-intents/{paymentIntentId}/refresh-token": {
      "post": {
        "tags": [
          "PaymentIntents"
        ],
        "operationId": "PaymentIntents_RefreshPaymentIntentToken",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the payment intent.",
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the PaymentIntentResponce object. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponce"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [],
        "summary": "Update a token",
        "description": "Updates a token."
      }
    },
    "/api/payment-intents/{paymentIntentId}/status": {
      "get": {
        "tags": [
          "PaymentIntents"
        ],
        "operationId": "PaymentIntents_GetPaymentIntentStatus",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the payment intent.",
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the PaymentIntentResponse object. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponce"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [],
        "description": "Retrieves a status of the payment intent that has previously been created.",
        "summary": "Retrieve a status"
      }
    },
    "/api/payment-intents/refunds/{refundId}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "operationId": "PaymentIntents_GetRefundById",
        "parameters": [
          {
            "name": "refundId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RefundResponse object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [],
        "description": "Retrieves the details of the refund that has previously been created.",
        "summary": "Retrieve a refund"
      }
    },
    "/api/payment-intents/{paymentIntentId}/refunds": {
      "post": {
        "tags": [
          "Refunds"
        ],
        "summary": "Create a refund",
        "description": "The method allows you to return a payment that has previously been created but not yet refunded. Payments that have been pre-authorized, but not captured, cannot be refunded.\nYou can refund the full amount or a partial amount.",
        "operationId": "Refunds_Create",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the payment intent.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "idempotencyKey",
            "x-originalName": "idempotencyKey",
            "in": "header",
            "required": true,
            "description": "An optional idempotency key to recognize subsequent retries of the same request. How you generate the idempotency key is up to you. Must be unique for each new refund for the payment intent.",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "createRefundRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefundRequest"
              }
            }
          },
          "required": true,
          "x-position": 3,
          "description": ""
        },
        "responses": {
          "200": {
            "description": "Returns the CreateRefundResponse object if the refund succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "If bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If internal server error",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/payment-intents/{paymentIntentId}/reversal": {
      "post": {
        "tags": [
          "Reversal"
        ],
        "summary": "Create a reversal",
        "description": "Reversal allows to cancel a sale or pre-auth transaction.",
        "operationId": "Reversal_Create",
        "parameters": [
          {
            "name": "paymentIntentId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the payment intent.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Reversal object if the reversal succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReversalResponse"
                }
              }
            }
          },
          "400": {
            "description": "If bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "If conflicted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If internal server error",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCaptureResponse": {
        "type": "object",
        "description": "The capture response object.",
        "additionalProperties": false,
        "title": "CreateCaptureResponse",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/CaptureStatus"
          },
          "message": {
            "type": "string",
            "description": "The description of the capture.",
            "nullable": true
          },
          "captureId": {
            "type": "string",
            "description": "Unique identifier for the capture.",
            "nullable": true
          }
        }
      },
      "CreateCaptureRequest": {
        "type": "object",
        "description": "The capture request object.",
        "additionalProperties": false,
        "title": "CreateCaptureRequest",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount to capture. You can capture the full amount or a partial amount.",
            "format": "int64"
          }
        },
        "required": [
          "amount"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "title": "ProblemDetails",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "properties": {
              "": {
                "type": "string"
              }
            }
          }
        }
      },
      "PaymentIntentResponce": {
        "type": "object",
        "additionalProperties": false,
        "description": "The PaymentIntentResponce object.",
        "title": "PaymentIntentResponce",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the payment intent.",
            "nullable": true
          },
          "captureMode": {
            "$ref": "#/components/schemas/CaptureMode"
          },
          "transactionSource": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransactionSource"
              }
            ],
            "description": "Information regarding the transaction source type."
          },
          "connecteToken": {
            "type": "string",
            "description": "The Connect-e token.",
            "nullable": true
          },
          "connecteTokenExpirationDate": {
            "type": "string",
            "description": "The date that the Connect-e token will expire.",
            "format": "date-time"
          },
          "paymentDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentDetails"
              }
            ],
            "description": "Details about the payment."
          },
          "status": {
            "$ref": "#/components/schemas/PaymentIntentStatus"
          },
          "amount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "description": "The payment amount."
          },
          "customer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Customer"
              }
            ],
            "description": "Details about the customer."
          },
          "requestSecurity": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RequestSecurity"
              }
            ],
            "description": "Customer's device information."
          },
          "billingAddress": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "The address where to send the invoice."
          },
          "shippingDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingDetails"
              }
            ],
            "description": "The address where to send the order."
          },
          "reference": {
            "type": "string",
            "description": "Details of the reference for the payment.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The payment description.",
            "nullable": true
          },
          "subtotalLineItems": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "description": "Total amount after discounts and taxes."
          },
          "itemLines": {
            "type": "array",
            "description": "The line items purchased by the customer.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemLine"
            }
          },
          "taxLines": {
            "type": "array",
            "description": "The taxes applied to the items.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxLine"
            }
          },
          "actionLink": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActionLink"
              }
            ],
            "description": "The link to the checkout page."
          },
          "config": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfig"
              }
            ],
            "description": "Details about the customer's email address."
          },
          "paymentSource": {
            "type": "string",
            "description": "Information regarding the payment source type.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A set of key-value pairs that you can use for storing additional information.",
            "nullable": true
          }
        }
      },
      "TransactionSource": {
        "type": "string",
        "description": "`MOTO` if the source of the transaction is mail or phone. Otherwise, this field is null.",
        "x-enumNames": [
          "MOTO"
        ],
        "enum": [
          "MOTO"
        ],
        "title": "TransactionSource"
      },
      "PaymentIntentStatus": {
        "type": "string",
        "description": "Current status of the payment intent.",
        "x-enumNames": [
          "Created",
          "Authorized",
          "Captured",
          "Reversed",
          "Refunded",
          "Cancelled"
        ],
        "title": "PaymentIntentStatus",
        "x-examples": {},
        "enum": [
          "Created",
          "Authorized",
          "Captured",
          "Reversed",
          "Refunded",
          "Cancelled"
        ]
      },
      "PaymentDetails": {
        "type": "object",
        "additionalProperties": false,
        "description": "The payment details object.",
        "title": "PaymentDetails",
        "properties": {
          "transactionDateTime": {
            "type": "string",
            "description": "The date and time of the payment in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "The description of the payment.",
            "nullable": true
          },
          "authCode": {
            "type": "string",
            "description": "The acquirer authorization code.",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "description": "The card number.",
            "nullable": true
          },
          "cardName": {
            "type": "string",
            "description": "The name of the cardholder.",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "description": "The expiry month and year. Format: MM/YY.",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "description": "The card scheme.",
            "nullable": true
          }
        }
      },
      "Address": {
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "example": {
            "value": {
              "address1": "The Brunel Building",
              "address2": "2 Canalside Walk",
              "address3": "",
              "address4": "",
              "city": "London",
              "state": "",
              "postcode": "W2 1DG",
              "countryCode": "GB",
              "locality": "",
              "county": "UK"
            }
          }
        },
        "description": "Details about the address.",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address line 1 (for example, company name).",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address line 2 (for example, street, apartment, or suite).",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "description": "Address line 3.",
            "nullable": true
          },
          "address4": {
            "type": "string",
            "description": "Address line 4.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City, town, district, suburb, or village.",
            "example": "London",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State, province, or region.",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "ZIP or postal code.",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-letter country code in [ISO 3166-1-alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "example": "GB",
            "nullable": true
          },
          "locality": {
            "type": "string",
            "description": "Locality, can use in addition to city.",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "County or zone.",
            "nullable": true
          }
        },
        "title": "Address"
      },
      "Customer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "The customer's email address.",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "The customer's phone number.",
            "nullable": true
          }
        },
        "description": "Details about the customer.",
        "title": "Customer"
      },
      "PaymentIntentConfig": {
        "type": "object",
        "additionalProperties": false,
        "description": "Details about the customer's email address.",
        "title": "PaymentIntentConfig",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "cancelUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "customerEmail": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfigUserEmail"
              }
            ],
            "description": "The customer's email address."
          },
          "details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfigDetails"
              }
            ]
          },
          "billingAddress": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfigBillingAddress"
              }
            ]
          },
          "shippingDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfigShippingDetails"
              }
            ]
          }
        }
      },
      "PaymentIntentConfigUserEmail": {
        "type": "object",
        "additionalProperties": false,
        "title": "PaymentIntentConfigUserEmail",
        "description": "Details about whether if the object will be collected.",
        "properties": {
          "collectionRequired": {
            "type": "boolean",
            "description": "If has the value 'true' the object will be collected."
          }
        }
      },
      "CreatePaymentIntentRequest": {
        "type": "object",
        "description": "The payment intent request object.",
        "additionalProperties": false,
        "title": "CreatePaymentIntentRequest",
        "properties": {
          "captureMode": {
            "$ref": "#/components/schemas/CaptureMode"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "reference": {
            "type": "string",
            "minLength": 1,
            "description": "The details of the reference for the payment."
          },
          "description": {
            "type": "string",
            "description": "The payment description.",
            "nullable": true
          },
          "customer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Customer"
              }
            ],
            "description": "Details about the user."
          },
          "billingAddress": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "The address where to send the invoice."
          },
          "shippingDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingDetails"
              }
            ],
            "description": "The address where to send the order."
          },
          "transactionSource": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransactionSource"
              }
            ],
            "description": "Information regarding the transaction source type. `MOTO` if the source of the transaction is mail or phone. Otherwise, this field is null."
          },
          "config": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentIntentConfig"
              }
            ]
          },
          "requestSecurity": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RequestSecurity"
              }
            ],
            "description": "Customer's device information."
          },
          "itemLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemLine"
            }
          },
          "taxLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxLine"
            }
          },
          "actionLink": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActionLink"
              }
            ],
            "description": "The link to the payment's associated actions."
          },
          "paymentSource": {
            "type": "string",
            "description": "Information regarding the payment source type.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A set of key-value pairs that you can use for storing additional information.",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "reference"
        ]
      },
      "RefundResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentIntentId": {
            "type": "string",
            "description": "Unique identifier for the payment intent.",
            "nullable": true
          },
          "refundId": {
            "type": "string",
            "description": "Unique identifier for the refund.",
            "nullable": true
          },
          "refundReason": {
            "type": "string",
            "description": "The reason for the refund.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "The description of the refund.",
            "nullable": true
          }
        },
        "description": "The refund response object.",
        "title": "RefundResponse"
      },
      "CreateRefundResponse": {
        "type": "object",
        "description": "The create refund response object.",
        "additionalProperties": false,
        "title": "CreateRefundResponse",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RefundStatus"
          },
          "message": {
            "type": "string",
            "description": "The description of the refund.",
            "nullable": true
          },
          "refundId": {
            "type": "string",
            "description": "Unique identifier for the refund.",
            "nullable": true
          }
        }
      },
      "CreateRefundRequest": {
        "type": "object",
        "description": "The create refund request object.",
        "example": {
          "amount": 100,
          "refundReason": "Duplicate transaction",
          "notes": "notes"
        },
        "additionalProperties": false,
        "title": "CreateRefundRequest",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The refund amount.",
            "format": "int64"
          },
          "previousTransactionId": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "type": "string",
            "description": "The reason for the refund.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "The description of the refund.",
            "nullable": true
          }
        },
        "required": [
          "amount"
        ]
      },
      "CreateReversalResponse": {
        "type": "object",
        "description": "The create reversal response object.",
        "additionalProperties": false,
        "title": "CreateReversalResponse",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ReversalStatus"
          },
          "message": {
            "type": "string",
            "description": "The description of the reversal.",
            "nullable": true
          },
          "reversalId": {
            "type": "string",
            "description": "Unique identifier for the reversal.",
            "nullable": true
          }
        }
      },
      "Money": {
        "title": "Money",
        "type": "object",
        "description": "The amount information for the transaction.",
        "properties": {
          "value": {
            "type": "integer",
            "description": "The amount in the minor unit, for example \"100\" for 1.00 GBP.",
            "format": "int64"
          },
          "currencyCode": {
            "type": "string",
            "description": "Three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217).",
            "minLength": 1
          }
        },
        "required": [
          "value",
          "currencyCode"
        ]
      },
      "RequestSecurity": {
        "type": "object",
        "additionalProperties": false,
        "title": "RequestSecurity",
        "description": "Customer's device information.",
        "properties": {
          "userAgent": {
            "type": "string",
            "description": "The customer's browser agent.",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "The customer's device IP address.",
            "nullable": true
          },
          "device": {
            "type": "string",
            "description": "The customer's device type.",
            "nullable": true
          }
        }
      },
      "CaptureMode": {
        "type": "string",
        "title": "CaptureMode",
        "x-enumNames": [
          "Auto",
          "Manual"
        ],
        "enum": [
          "Auto",
          "Manual"
        ],
        "description": "The type of capture for the payment.",
        "default": "Auto"
      },
      "ShippingDetails": {
        "type": "object",
        "title": "ShippingDetails",
        "additionalProperties": false,
        "description": "Details about the shipping.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer.",
            "nullable": true
          },
          "deliveryNotes": {
            "type": "string",
            "description": "The delivery notes.",
            "nullable": true
          },
          "address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "The address where to send the order."
          }
        }
      },
      "ItemLine": {
        "type": "object",
        "title": "ItemLine",
        "additionalProperties": false,
        "description": "The item line object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of items being purchased."
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "amountTotal": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "description": "Total amount before any discounts or taxes are applied."
          }
        }
      },
      "TaxLine": {
        "type": "object",
        "title": "TaxLine",
        "additionalProperties": false,
        "description": "The tax line object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object.",
            "nullable": true
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "subCaption": {
            "type": "string",
            "nullable": true
          },
          "amountTotal": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "description": "Total amout of taxes."
          }
        }
      },
      "ActionLink": {
        "type": "object",
        "title": "ActionLink",
        "additionalProperties": false,
        "description": "The link to the payment's associated actions.",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "The link URL."
          },
          "action": {
            "$ref": "#/components/schemas/ActionType"
          },
          "label": {
            "type": "string",
            "minLength": 1,
            "description": "Custom label given to the action."
          },
          "fileName": {
            "type": "string",
            "description": "Filename of the document.",
            "nullable": true
          }
        },
        "required": [
          "url",
          "label"
        ]
      },
      "ActionType": {
        "type": "string",
        "title": "ActionType",
        "x-enumNames": [
          "OpenLink",
          "DownloadFile"
        ],
        "description": "The type of action associated with the link. ",
        "enum": [
          "DownloadFile",
          "OpenLink"
        ],
        "default": "OpenLink"
      },
      "PaymentIntentConfigBillingAddress": {
        "type": "object",
        "title": "PaymentIntentConfigBillingAddress",
        "additionalProperties": false,
        "properties": {
          "collectionRequired": {
            "type": "boolean",
            "description": "If has the value 'true' the object will be collected."
          }
        }
      },
      "PaymentIntentConfigDetails": {
        "type": "object",
        "title": "PaymentIntentConfigDetails",
        "additionalProperties": false,
        "properties": {
          "showTotal": {
            "type": "boolean"
          }
        }
      },
      "PaymentIntentConfigShippingDetails": {
        "type": "object",
        "title": "PaymentIntentConfigShippingDetails",
        "additionalProperties": false,
        "properties": {
          "collectionRequired": {
            "type": "boolean",
            "description": "If has the value 'true' the object will be collected."
          }
        }
      },
      "CaptureStatus": {
        "title": "CaptureStatus",
        "type": "string",
        "description": "Current capture status.",
        "x-enumNames": [
          "Created",
          "Successful",
          "Failed"
        ],
        "enum": [
          "Created",
          "Successful",
          "Failed"
        ]
      },
      "RefundStatus": {
        "type": "string",
        "title": "RefundStatus",
        "enum": [
          "Created",
          "Successful",
          "Failed"
        ],
        "x-enumNames": [
          "Created",
          "Successful",
          "Failed"
        ],
        "description": "Current refund status."
      },
      "ReversalStatus": {
        "type": "string",
        "title": "ReversalStatus",
        "enum": [
          "Created",
          "Successful",
          "Failed"
        ],
        "x-enumNames": [
          "Created",
          "Successful",
          "Failed"
        ],
        "description": "Current reversal status."
      }
    },
    "securitySchemes": {}
  }
}